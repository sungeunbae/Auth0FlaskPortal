
from sqlalchemy import create_engine, MetaData, Table
from sqlalchemy.orm import mapper, sessionmaker
from flask import session
from constants import JWT_PAYLOAD

class User(object):
    pass

def get_user_id():
    return session[JWT_PAYLOAD]['sub']

def loadSession(config):
    engine = create_engine(config, echo=True)
    metadata = MetaData(engine)
    users = Table('User', metadata, autoload=True)

    mapper(User, users)
    Session = sessionmaker(bind=engine)
    dbsession = Session()
    return dbsession

#dbsession = loadSession()
#res = dbsession.query(User).all()

## The following was generated by
## sqlacodegen 'mysql+pymysql://remote:Yonsei961978!@3.105.46.89/seistech'



# coding: utf-8
# from sqlalchemy import Column, Float, String, Text
# from sqlalchemy.dialects.mysql import INTEGER
# from sqlalchemy.ext.declarative import declarative_base

# Base = declarative_base()
# metadata = Base.metadata


# class Accounting(Base):
#     __tablename__ = 'Accounting'

#     id = Column(INTEGER(11), primary_key=True)
#     purchase_id = Column(INTEGER(11), nullable=False)
#     data_id = Column(INTEGER(11), nullable=False)


# class DataRepo(Base):
#     __tablename__ = 'DataRepo'

#     id = Column(INTEGER(11), primary_key=True)
#     name = Column(String(64), nullable=False)
#     description = Column(Text, nullable=False)
#     path = Column(Text, nullable=False)


# class Product(Base):
#     __tablename__ = 'Product'

#     id = Column(INTEGER(11), primary_key=True)
#     name = Column(String(64), nullable=False)
#     description = Column(Text, nullable=False)
#     version = Column(String(32), nullable=False)
#     data_version = Column(String(32), nullable=False)
#     img = Column(Text, nullable=False)
#     domain = Column(Text, nullable=False)
#     price = Column(Float, nullable=False)
#     out_format = Column(String(128), nullable=False)
#     access_level = Column(INTEGER(11), nullable=False)


# class Project(Base):
#     __tablename__ = 'Project'

#     id = Column(INTEGER(11), primary_key=True)
#     user_id = Column(String(64), nullable=False)
#     lat = Column(Float, nullable=False)
#     lon = Column(Float, nullable=False)
#     snapped_lat = Column(Float, nullable=False)
#     snapped_lon = Column(Float, nullable=False)


# class Purchase(Base):
#     __tablename__ = 'Purchase'

#     id = Column(INTEGER(11), primary_key=True)
#     product_id = Column(INTEGER(11), nullable=False)
#     project_id = Column(INTEGER(11), nullable=False)
#     transaction_id = Column(INTEGER(11), nullable=False)
#     status = Column(INTEGER(11), nullable=False)


# class User(Base):
#     __tablename__ = 'User'

#     id = Column(String(64), primary_key=True)
#     email = Column(String(64))
#     frame = Column(String(64))
#     name = Column(String(64))
#     affiliation = Column(String(128))
